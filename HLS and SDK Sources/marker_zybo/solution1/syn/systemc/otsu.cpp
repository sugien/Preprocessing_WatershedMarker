// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "otsu.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic otsu::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic otsu::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<65> otsu::ap_ST_fsm_state1 = "1";
const sc_lv<65> otsu::ap_ST_fsm_state2 = "10";
const sc_lv<65> otsu::ap_ST_fsm_state3 = "100";
const sc_lv<65> otsu::ap_ST_fsm_state4 = "1000";
const sc_lv<65> otsu::ap_ST_fsm_state5 = "10000";
const sc_lv<65> otsu::ap_ST_fsm_state6 = "100000";
const sc_lv<65> otsu::ap_ST_fsm_state7 = "1000000";
const sc_lv<65> otsu::ap_ST_fsm_state8 = "10000000";
const sc_lv<65> otsu::ap_ST_fsm_state9 = "100000000";
const sc_lv<65> otsu::ap_ST_fsm_state10 = "1000000000";
const sc_lv<65> otsu::ap_ST_fsm_state11 = "10000000000";
const sc_lv<65> otsu::ap_ST_fsm_state12 = "100000000000";
const sc_lv<65> otsu::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<65> otsu::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> otsu::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> otsu::ap_const_lv32_2 = "10";
const sc_lv<32> otsu::ap_const_lv32_10 = "10000";
const sc_lv<1> otsu::ap_const_lv1_0 = "0";
const sc_lv<32> otsu::ap_const_lv32_9 = "1001";
const sc_lv<32> otsu::ap_const_lv32_17 = "10111";
const sc_lv<32> otsu::ap_const_lv32_21 = "100001";
const sc_lv<32> otsu::ap_const_lv32_E = "1110";
const sc_lv<32> otsu::ap_const_lv32_1C = "11100";
const sc_lv<32> otsu::ap_const_lv32_36 = "110110";
const sc_lv<32> otsu::ap_const_lv32_25 = "100101";
const sc_lv<32> otsu::ap_const_lv32_3A = "111010";
const sc_lv<32> otsu::ap_const_lv32_3E = "111110";
const sc_lv<32> otsu::ap_const_lv32_1 = "1";
const sc_lv<32> otsu::ap_const_lv32_3 = "11";
const sc_lv<32> otsu::ap_const_lv32_F = "1111";
const sc_lv<32> otsu::ap_const_lv32_11 = "10001";
const sc_lv<32> otsu::ap_const_lv32_18 = "11000";
const sc_lv<32> otsu::ap_const_lv32_31 = "110001";
const sc_lv<32> otsu::ap_const_lv32_3F = "111111";
const sc_lv<9> otsu::ap_const_lv9_0 = "000000000";
const sc_lv<1> otsu::ap_const_lv1_1 = "1";
const sc_lv<32> otsu::ap_const_lv32_40 = "1000000";
const sc_lv<32> otsu::ap_const_lv32_1D = "11101";
const sc_lv<32> otsu::ap_const_lv32_A = "1010";
const sc_lv<32> otsu::ap_const_lv32_32 = "110010";
const sc_lv<32> otsu::ap_const_lv32_22 = "100010";
const sc_lv<32> otsu::ap_const_lv32_37 = "110111";
const sc_lv<32> otsu::ap_const_lv32_3B = "111011";
const sc_lv<32> otsu::ap_const_lv32_4 = "100";
const sc_lv<32> otsu::ap_const_lv32_12 = "10010";
const sc_lv<9> otsu::ap_const_lv9_100 = "100000000";
const sc_lv<9> otsu::ap_const_lv9_1 = "1";
const sc_lv<32> otsu::ap_const_lv32_8 = "1000";
const sc_lv<32> otsu::ap_const_lv32_FAAA = "1111101010101010";
const sc_lv<32> otsu::ap_const_lv32_1E = "11110";
const sc_lv<8> otsu::ap_const_lv8_FF = "11111111";
const sc_lv<23> otsu::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<2> otsu::ap_const_lv2_0 = "00";
const sc_lv<2> otsu::ap_const_lv2_1 = "1";
const sc_lv<5> otsu::ap_const_lv5_2 = "10";
const bool otsu::ap_const_boolean_1 = true;

otsu::otsu(sc_module_name name) : sc_module(name), mVcdFile(0) {
    make_marker_faddfbkb_U1 = new make_marker_faddfbkb<1,5,32,32,32>("make_marker_faddfbkb_U1");
    make_marker_faddfbkb_U1->clk(ap_clk);
    make_marker_faddfbkb_U1->reset(ap_rst);
    make_marker_faddfbkb_U1->din0(grp_fu_118_p0);
    make_marker_faddfbkb_U1->din1(grp_fu_118_p1);
    make_marker_faddfbkb_U1->opcode(grp_fu_118_opcode);
    make_marker_faddfbkb_U1->ce(ap_var_for_const0);
    make_marker_faddfbkb_U1->dout(grp_fu_118_p2);
    make_marker_fmul_cud_U2 = new make_marker_fmul_cud<1,4,32,32,32>("make_marker_fmul_cud_U2");
    make_marker_fmul_cud_U2->clk(ap_clk);
    make_marker_fmul_cud_U2->reset(ap_rst);
    make_marker_fmul_cud_U2->din0(grp_fu_123_p0);
    make_marker_fmul_cud_U2->din1(grp_fu_123_p1);
    make_marker_fmul_cud_U2->ce(ap_var_for_const0);
    make_marker_fmul_cud_U2->dout(grp_fu_123_p2);
    make_marker_fdiv_dEe_U3 = new make_marker_fdiv_dEe<1,16,32,32,32>("make_marker_fdiv_dEe_U3");
    make_marker_fdiv_dEe_U3->clk(ap_clk);
    make_marker_fdiv_dEe_U3->reset(ap_rst);
    make_marker_fdiv_dEe_U3->din0(reg_159);
    make_marker_fdiv_dEe_U3->din1(reg_152);
    make_marker_fdiv_dEe_U3->ce(ap_var_for_const0);
    make_marker_fdiv_dEe_U3->dout(grp_fu_127_p2);
    make_marker_fdiv_dEe_U4 = new make_marker_fdiv_dEe<1,16,32,32,32>("make_marker_fdiv_dEe_U4");
    make_marker_fdiv_dEe_U4->clk(ap_clk);
    make_marker_fdiv_dEe_U4->reset(ap_rst);
    make_marker_fdiv_dEe_U4->din0(tmp_9_reg_478);
    make_marker_fdiv_dEe_U4->din1(tmp_10_reg_483);
    make_marker_fdiv_dEe_U4->ce(ap_var_for_const0);
    make_marker_fdiv_dEe_U4->dout(grp_fu_131_p2);
    make_marker_sitofeOg_U5 = new make_marker_sitofeOg<1,6,32,32>("make_marker_sitofeOg_U5");
    make_marker_sitofeOg_U5->clk(ap_clk);
    make_marker_sitofeOg_U5->reset(ap_rst);
    make_marker_sitofeOg_U5->din0(grp_fu_135_p0);
    make_marker_sitofeOg_U5->ce(ap_var_for_const0);
    make_marker_sitofeOg_U5->dout(grp_fu_135_p1);
    make_marker_sitofeOg_U6 = new make_marker_sitofeOg<1,6,32,32>("make_marker_sitofeOg_U6");
    make_marker_sitofeOg_U6->clk(ap_clk);
    make_marker_sitofeOg_U6->reset(ap_rst);
    make_marker_sitofeOg_U6->din0(wF_reg_460);
    make_marker_sitofeOg_U6->ce(ap_var_for_const0);
    make_marker_sitofeOg_U6->dout(grp_fu_138_p1);
    make_marker_fcmp_fYi_U7 = new make_marker_fcmp_fYi<1,1,32,32,1>("make_marker_fcmp_fYi_U7");
    make_marker_fcmp_fYi_U7->din0(reg_167);
    make_marker_fcmp_fYi_U7->din1(varMax_fu_48);
    make_marker_fcmp_fYi_U7->opcode(ap_var_for_const1);
    make_marker_fcmp_fYi_U7->dout(tmp_21_fu_141_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_5_reg_436 );
    sensitive << ( tmp_8_fu_243_p2 );
    sensitive << ( tmp_s_fu_255_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_5_reg_436 );
    sensitive << ( tmp_8_fu_243_p2 );
    sensitive << ( tmp_s_fu_255_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_5_reg_436 );
    sensitive << ( tmp_8_fu_243_p2 );
    sensitive << ( threshold_fu_40 );
    sensitive << ( tmp_s_fu_255_p2 );

    SC_METHOD(thread_exitcond_fu_177_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_reg_72 );

    SC_METHOD(thread_grp_fu_118_opcode);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_grp_fu_118_p0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( mB_reg_489 );
    sensitive << ( sum_reg_83 );
    sensitive << ( sumB_fu_44 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_grp_fu_118_p1);
    sensitive << ( reg_152 );
    sensitive << ( reg_159 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( mF_reg_494 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_grp_fu_123_p0);
    sensitive << ( reg_152 );
    sensitive << ( reg_167 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_grp_fu_123_p1);
    sensitive << ( reg_159 );
    sensitive << ( tmp_10_reg_483 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state60 );

    SC_METHOD(thread_grp_fu_135_p0);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_1_reg_425 );
    sensitive << ( wB_1_reg_450 );
    sensitive << ( tmp_3_reg_468 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_histData_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_fu_189_p1 );
    sensitive << ( tmp_6_fu_232_p1 );

    SC_METHOD(thread_histData_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_notlhs3_fu_333_p2);
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( tmp_16_fu_301_p4 );

    SC_METHOD(thread_notlhs_fu_315_p2);
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( tmp_14_fu_283_p4 );

    SC_METHOD(thread_notrhs4_fu_339_p2);
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( tmp_17_fu_311_p1 );

    SC_METHOD(thread_notrhs_fu_321_p2);
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( tmp_15_fu_293_p1 );

    SC_METHOD(thread_t_1_fu_183_p2);
    sensitive << ( t_reg_72 );

    SC_METHOD(thread_t_2_fu_226_p2);
    sensitive << ( threshold_2_reg_107 );

    SC_METHOD(thread_t_cast2_fu_173_p1);
    sensitive << ( t_reg_72 );

    SC_METHOD(thread_threshold_1_fu_371_p3);
    sensitive << ( threshold_3_cast1_reg_430 );
    sensitive << ( threshold_fu_40 );
    sensitive << ( tmp_22_fu_357_p2 );

    SC_METHOD(thread_threshold_3_cast1_fu_214_p1);
    sensitive << ( threshold_2_reg_107 );

    SC_METHOD(thread_tmp_14_fu_283_p4);
    sensitive << ( varBetween_to_int_fu_279_p1 );

    SC_METHOD(thread_tmp_15_fu_293_p1);
    sensitive << ( varBetween_to_int_fu_279_p1 );

    SC_METHOD(thread_tmp_16_fu_301_p4);
    sensitive << ( varMax_to_int_fu_297_p1 );

    SC_METHOD(thread_tmp_17_fu_311_p1);
    sensitive << ( varMax_to_int_fu_297_p1 );

    SC_METHOD(thread_tmp_18_fu_327_p2);
    sensitive << ( notrhs_fu_321_p2 );
    sensitive << ( notlhs_fu_315_p2 );

    SC_METHOD(thread_tmp_19_fu_345_p2);
    sensitive << ( notrhs4_fu_339_p2 );
    sensitive << ( notlhs3_fu_333_p2 );

    SC_METHOD(thread_tmp_1_fu_209_p1);
    sensitive << ( t_cast2_reg_386 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_1_fu_209_p2);
    sensitive << ( reg_148 );
    sensitive << ( tmp_1_fu_209_p1 );

    SC_METHOD(thread_tmp_20_fu_351_p2);
    sensitive << ( tmp_18_fu_327_p2 );
    sensitive << ( tmp_19_fu_345_p2 );

    SC_METHOD(thread_tmp_22_fu_357_p2);
    sensitive << ( tmp_20_fu_351_p2 );
    sensitive << ( tmp_21_fu_141_p2 );

    SC_METHOD(thread_tmp_3_fu_261_p1);
    sensitive << ( threshold_3_cast1_reg_430 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_tmp_3_fu_261_p2);
    sensitive << ( reg_148 );
    sensitive << ( tmp_3_fu_261_p1 );

    SC_METHOD(thread_tmp_6_fu_232_p1);
    sensitive << ( threshold_2_reg_107 );

    SC_METHOD(thread_tmp_8_fu_243_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_5_reg_436 );
    sensitive << ( wB_1_fu_237_p2 );

    SC_METHOD(thread_tmp_fu_189_p1);
    sensitive << ( t_reg_72 );

    SC_METHOD(thread_tmp_s_fu_255_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_5_reg_436 );
    sensitive << ( wB_1_fu_237_p2 );
    sensitive << ( tmp_8_fu_243_p2 );

    SC_METHOD(thread_varBetween_to_int_fu_279_p1);
    sensitive << ( reg_167 );

    SC_METHOD(thread_varMax_1_fu_363_p3);
    sensitive << ( reg_167 );
    sensitive << ( varMax_fu_48 );
    sensitive << ( tmp_22_fu_357_p2 );

    SC_METHOD(thread_varMax_to_int_fu_297_p1);
    sensitive << ( varMax_fu_48 );

    SC_METHOD(thread_wB_1_fu_237_p0);
    sensitive << ( histData_q0 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wB_1_fu_237_p2);
    sensitive << ( wB_reg_95 );
    sensitive << ( wB_1_fu_237_p0 );

    SC_METHOD(thread_wF_fu_249_p2);
    sensitive << ( wB_1_fu_237_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_5_reg_436 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_177_p2 );
    sensitive << ( tmp_8_fu_243_p2 );
    sensitive << ( tmp_s_fu_255_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "otsu_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, histData_address0, "(port)histData_address0");
    sc_trace(mVcdFile, histData_ce0, "(port)histData_ce0");
    sc_trace(mVcdFile, histData_q0, "(port)histData_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_148, "reg_148");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_5_reg_436, "tmp_5_reg_436");
    sc_trace(mVcdFile, grp_fu_135_p1, "grp_fu_135_p1");
    sc_trace(mVcdFile, reg_152, "reg_152");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_fu_118_p2, "grp_fu_118_p2");
    sc_trace(mVcdFile, reg_159, "reg_159");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, grp_fu_123_p2, "grp_fu_123_p2");
    sc_trace(mVcdFile, reg_167, "reg_167");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, t_cast2_fu_173_p1, "t_cast2_fu_173_p1");
    sc_trace(mVcdFile, t_cast2_reg_386, "t_cast2_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, t_1_fu_183_p2, "t_1_fu_183_p2");
    sc_trace(mVcdFile, t_1_reg_394, "t_1_reg_394");
    sc_trace(mVcdFile, exitcond_fu_177_p2, "exitcond_fu_177_p2");
    sc_trace(mVcdFile, tmp_1_fu_209_p2, "tmp_1_fu_209_p2");
    sc_trace(mVcdFile, tmp_1_reg_425, "tmp_1_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, threshold_3_cast1_fu_214_p1, "threshold_3_cast1_fu_214_p1");
    sc_trace(mVcdFile, threshold_3_cast1_reg_430, "threshold_3_cast1_reg_430");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, t_2_fu_226_p2, "t_2_fu_226_p2");
    sc_trace(mVcdFile, t_2_reg_440, "t_2_reg_440");
    sc_trace(mVcdFile, wB_1_fu_237_p2, "wB_1_fu_237_p2");
    sc_trace(mVcdFile, wB_1_reg_450, "wB_1_reg_450");
    sc_trace(mVcdFile, tmp_8_fu_243_p2, "tmp_8_fu_243_p2");
    sc_trace(mVcdFile, tmp_8_reg_456, "tmp_8_reg_456");
    sc_trace(mVcdFile, wF_fu_249_p2, "wF_fu_249_p2");
    sc_trace(mVcdFile, wF_reg_460, "wF_reg_460");
    sc_trace(mVcdFile, tmp_3_fu_261_p2, "tmp_3_fu_261_p2");
    sc_trace(mVcdFile, tmp_3_reg_468, "tmp_3_reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_9_reg_478, "tmp_9_reg_478");
    sc_trace(mVcdFile, grp_fu_138_p1, "grp_fu_138_p1");
    sc_trace(mVcdFile, tmp_10_reg_483, "tmp_10_reg_483");
    sc_trace(mVcdFile, grp_fu_127_p2, "grp_fu_127_p2");
    sc_trace(mVcdFile, mB_reg_489, "mB_reg_489");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, grp_fu_131_p2, "grp_fu_131_p2");
    sc_trace(mVcdFile, mF_reg_494, "mF_reg_494");
    sc_trace(mVcdFile, varMax_1_fu_363_p3, "varMax_1_fu_363_p3");
    sc_trace(mVcdFile, varMax_1_reg_499, "varMax_1_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, threshold_1_fu_371_p3, "threshold_1_fu_371_p3");
    sc_trace(mVcdFile, threshold_1_reg_504, "threshold_1_reg_504");
    sc_trace(mVcdFile, t_reg_72, "t_reg_72");
    sc_trace(mVcdFile, sum_reg_83, "sum_reg_83");
    sc_trace(mVcdFile, wB_reg_95, "wB_reg_95");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, threshold_2_reg_107, "threshold_2_reg_107");
    sc_trace(mVcdFile, tmp_fu_189_p1, "tmp_fu_189_p1");
    sc_trace(mVcdFile, tmp_6_fu_232_p1, "tmp_6_fu_232_p1");
    sc_trace(mVcdFile, threshold_fu_40, "threshold_fu_40");
    sc_trace(mVcdFile, tmp_s_fu_255_p2, "tmp_s_fu_255_p2");
    sc_trace(mVcdFile, sumB_fu_44, "sumB_fu_44");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, varMax_fu_48, "varMax_fu_48");
    sc_trace(mVcdFile, grp_fu_118_p0, "grp_fu_118_p0");
    sc_trace(mVcdFile, grp_fu_118_p1, "grp_fu_118_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, grp_fu_123_p0, "grp_fu_123_p0");
    sc_trace(mVcdFile, grp_fu_123_p1, "grp_fu_123_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, grp_fu_135_p0, "grp_fu_135_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_1_fu_209_p1, "tmp_1_fu_209_p1");
    sc_trace(mVcdFile, wB_1_fu_237_p0, "wB_1_fu_237_p0");
    sc_trace(mVcdFile, tmp_3_fu_261_p1, "tmp_3_fu_261_p1");
    sc_trace(mVcdFile, varBetween_to_int_fu_279_p1, "varBetween_to_int_fu_279_p1");
    sc_trace(mVcdFile, varMax_to_int_fu_297_p1, "varMax_to_int_fu_297_p1");
    sc_trace(mVcdFile, tmp_14_fu_283_p4, "tmp_14_fu_283_p4");
    sc_trace(mVcdFile, tmp_15_fu_293_p1, "tmp_15_fu_293_p1");
    sc_trace(mVcdFile, notrhs_fu_321_p2, "notrhs_fu_321_p2");
    sc_trace(mVcdFile, notlhs_fu_315_p2, "notlhs_fu_315_p2");
    sc_trace(mVcdFile, tmp_16_fu_301_p4, "tmp_16_fu_301_p4");
    sc_trace(mVcdFile, tmp_17_fu_311_p1, "tmp_17_fu_311_p1");
    sc_trace(mVcdFile, notrhs4_fu_339_p2, "notrhs4_fu_339_p2");
    sc_trace(mVcdFile, notlhs3_fu_333_p2, "notlhs3_fu_333_p2");
    sc_trace(mVcdFile, tmp_18_fu_327_p2, "tmp_18_fu_327_p2");
    sc_trace(mVcdFile, tmp_19_fu_345_p2, "tmp_19_fu_345_p2");
    sc_trace(mVcdFile, tmp_20_fu_351_p2, "tmp_20_fu_351_p2");
    sc_trace(mVcdFile, tmp_21_fu_141_p2, "tmp_21_fu_141_p2");
    sc_trace(mVcdFile, tmp_22_fu_357_p2, "tmp_22_fu_357_p2");
    sc_trace(mVcdFile, grp_fu_118_opcode, "grp_fu_118_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

otsu::~otsu() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete make_marker_faddfbkb_U1;
    delete make_marker_fmul_cud_U2;
    delete make_marker_fdiv_dEe_U3;
    delete make_marker_fdiv_dEe_U4;
    delete make_marker_sitofeOg_U5;
    delete make_marker_sitofeOg_U6;
    delete make_marker_fcmp_fYi_U7;
}

void otsu::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void otsu::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void otsu::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        sumB_fu_44 = reg_159.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_177_p2.read(), ap_const_lv1_1))) {
        sumB_fu_44 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sum_reg_83 = grp_fu_118_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        sum_reg_83 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_reg_72 = t_1_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        t_reg_72 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        threshold_2_reg_107 = t_2_reg_440.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_177_p2.read(), ap_const_lv1_1))) {
        threshold_2_reg_107 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_456.read()))) {
        threshold_fu_40 = threshold_1_reg_504.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_177_p2.read(), ap_const_lv1_1))) {
        threshold_fu_40 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_456.read()))) {
        varMax_fu_48 = varMax_1_reg_499.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_177_p2.read(), ap_const_lv1_1))) {
        varMax_fu_48 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        wB_reg_95 = wB_1_reg_450.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_177_p2.read(), ap_const_lv1_1))) {
        wB_reg_95 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        mB_reg_489 = grp_fu_127_p2.read();
        mF_reg_494 = grp_fu_131_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_0)))) {
        reg_148 = histData_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        reg_152 = grp_fu_135_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()))) {
        reg_159 = grp_fu_118_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()))) {
        reg_167 = grp_fu_123_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_1_reg_394 = t_1_fu_183_p2.read();
        t_cast2_reg_386 = t_cast2_fu_173_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_2_reg_440 = t_2_fu_226_p2.read();
        threshold_3_cast1_reg_430 = threshold_3_cast1_fu_214_p1.read();
        tmp_5_reg_436 = threshold_2_reg_107.read().range(8, 8);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        threshold_1_reg_504 = threshold_1_fu_371_p3.read();
        varMax_1_reg_499 = varMax_1_fu_363_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        tmp_10_reg_483 = grp_fu_138_p1.read();
        tmp_9_reg_478 = grp_fu_118_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_1_reg_425 = tmp_1_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_3_reg_468 = tmp_3_fu_261_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_0))) {
        tmp_8_reg_456 = tmp_8_fu_243_p2.read();
        wB_1_reg_450 = wB_1_fu_237_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_0))) {
        wF_reg_460 = wF_fu_249_p2.read();
    }
}

void otsu::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void otsu::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void otsu::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void otsu::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void otsu::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void otsu::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void otsu::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void otsu::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void otsu::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void otsu::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void otsu::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void otsu::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void otsu::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void otsu::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void otsu::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void otsu::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void otsu::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void otsu::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void otsu::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void otsu::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void otsu::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void otsu::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void otsu::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void otsu::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void otsu::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void otsu::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void otsu::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void otsu::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void otsu::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          (esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_1) || 
           (esl_seteq<1,1,1>(tmp_s_fu_255_p2.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_0)))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void otsu::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void otsu::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         (esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_1) || 
          (esl_seteq<1,1,1>(tmp_s_fu_255_p2.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_0))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void otsu::thread_ap_return() {
    ap_return = threshold_fu_40.read();
}

void otsu::thread_exitcond_fu_177_p2() {
    exitcond_fu_177_p2 = (!t_reg_72.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(t_reg_72.read() == ap_const_lv9_100);
}

void otsu::thread_grp_fu_118_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        grp_fu_118_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_118_opcode = ap_const_lv2_0;
    } else {
        grp_fu_118_opcode = "XX";
    }
}

void otsu::thread_grp_fu_118_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        grp_fu_118_p0 = mB_reg_489.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_fu_118_p0 = sumB_fu_44.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_118_p0 = sum_reg_83.read();
    } else {
        grp_fu_118_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void otsu::thread_grp_fu_118_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        grp_fu_118_p1 = mF_reg_494.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_fu_118_p1 = reg_159.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_118_p1 = reg_152.read();
    } else {
        grp_fu_118_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void otsu::thread_grp_fu_123_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
        grp_fu_123_p0 = reg_167.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_123_p0 = reg_152.read();
    } else {
        grp_fu_123_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void otsu::thread_grp_fu_123_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
        grp_fu_123_p1 = reg_159.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_123_p1 = tmp_10_reg_483.read();
    } else {
        grp_fu_123_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void otsu::thread_grp_fu_135_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_135_p0 = wB_1_reg_450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_135_p0 = tmp_3_reg_468.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_135_p0 = tmp_1_reg_425.read();
    } else {
        grp_fu_135_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void otsu::thread_histData_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        histData_address0 =  (sc_lv<8>) (tmp_6_fu_232_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        histData_address0 =  (sc_lv<8>) (tmp_fu_189_p1.read());
    } else {
        histData_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void otsu::thread_histData_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        histData_ce0 = ap_const_logic_1;
    } else {
        histData_ce0 = ap_const_logic_0;
    }
}

void otsu::thread_notlhs3_fu_333_p2() {
    notlhs3_fu_333_p2 = (!tmp_16_fu_301_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_301_p4.read() != ap_const_lv8_FF);
}

void otsu::thread_notlhs_fu_315_p2() {
    notlhs_fu_315_p2 = (!tmp_14_fu_283_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_283_p4.read() != ap_const_lv8_FF);
}

void otsu::thread_notrhs4_fu_339_p2() {
    notrhs4_fu_339_p2 = (!tmp_17_fu_311_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_311_p1.read() == ap_const_lv23_0);
}

void otsu::thread_notrhs_fu_321_p2() {
    notrhs_fu_321_p2 = (!tmp_15_fu_293_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_293_p1.read() == ap_const_lv23_0);
}

void otsu::thread_t_1_fu_183_p2() {
    t_1_fu_183_p2 = (!t_reg_72.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(t_reg_72.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void otsu::thread_t_2_fu_226_p2() {
    t_2_fu_226_p2 = (!threshold_2_reg_107.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(threshold_2_reg_107.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void otsu::thread_t_cast2_fu_173_p1() {
    t_cast2_fu_173_p1 = esl_zext<32,9>(t_reg_72.read());
}

void otsu::thread_threshold_1_fu_371_p3() {
    threshold_1_fu_371_p3 = (!tmp_22_fu_357_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_22_fu_357_p2.read()[0].to_bool())? threshold_3_cast1_reg_430.read(): threshold_fu_40.read());
}

void otsu::thread_threshold_3_cast1_fu_214_p1() {
    threshold_3_cast1_fu_214_p1 = esl_zext<32,9>(threshold_2_reg_107.read());
}

void otsu::thread_tmp_14_fu_283_p4() {
    tmp_14_fu_283_p4 = varBetween_to_int_fu_279_p1.read().range(30, 23);
}

void otsu::thread_tmp_15_fu_293_p1() {
    tmp_15_fu_293_p1 = varBetween_to_int_fu_279_p1.read().range(23-1, 0);
}

void otsu::thread_tmp_16_fu_301_p4() {
    tmp_16_fu_301_p4 = varMax_to_int_fu_297_p1.read().range(30, 23);
}

void otsu::thread_tmp_17_fu_311_p1() {
    tmp_17_fu_311_p1 = varMax_to_int_fu_297_p1.read().range(23-1, 0);
}

void otsu::thread_tmp_18_fu_327_p2() {
    tmp_18_fu_327_p2 = (notrhs_fu_321_p2.read() | notlhs_fu_315_p2.read());
}

void otsu::thread_tmp_19_fu_345_p2() {
    tmp_19_fu_345_p2 = (notrhs4_fu_339_p2.read() | notlhs3_fu_333_p2.read());
}

void otsu::thread_tmp_1_fu_209_p1() {
    tmp_1_fu_209_p1 =  (sc_lv<9>) (t_cast2_reg_386.read());
}

void otsu::thread_tmp_1_fu_209_p2() {
    tmp_1_fu_209_p2 = (!reg_148.read().is_01() || !tmp_1_fu_209_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_148.read()) * sc_biguint<9>(tmp_1_fu_209_p1.read());
}

void otsu::thread_tmp_20_fu_351_p2() {
    tmp_20_fu_351_p2 = (tmp_18_fu_327_p2.read() & tmp_19_fu_345_p2.read());
}

void otsu::thread_tmp_22_fu_357_p2() {
    tmp_22_fu_357_p2 = (tmp_20_fu_351_p2.read() & tmp_21_fu_141_p2.read());
}

void otsu::thread_tmp_3_fu_261_p1() {
    tmp_3_fu_261_p1 =  (sc_lv<9>) (threshold_3_cast1_reg_430.read());
}

void otsu::thread_tmp_3_fu_261_p2() {
    tmp_3_fu_261_p2 = (!reg_148.read().is_01() || !tmp_3_fu_261_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_148.read()) * sc_biguint<9>(tmp_3_fu_261_p1.read());
}

void otsu::thread_tmp_6_fu_232_p1() {
    tmp_6_fu_232_p1 = esl_zext<64,9>(threshold_2_reg_107.read());
}

void otsu::thread_tmp_8_fu_243_p2() {
    tmp_8_fu_243_p2 = (!wB_1_fu_237_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(wB_1_fu_237_p2.read() == ap_const_lv32_0);
}

void otsu::thread_tmp_fu_189_p1() {
    tmp_fu_189_p1 = esl_zext<64,9>(t_reg_72.read());
}

void otsu::thread_tmp_s_fu_255_p2() {
    tmp_s_fu_255_p2 = (!wB_1_fu_237_p2.read().is_01() || !ap_const_lv32_FAAA.is_01())? sc_lv<1>(): sc_lv<1>(wB_1_fu_237_p2.read() == ap_const_lv32_FAAA);
}

void otsu::thread_varBetween_to_int_fu_279_p1() {
    varBetween_to_int_fu_279_p1 = reg_167.read();
}

void otsu::thread_varMax_1_fu_363_p3() {
    varMax_1_fu_363_p3 = (!tmp_22_fu_357_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_22_fu_357_p2.read()[0].to_bool())? reg_167.read(): varMax_fu_48.read());
}

void otsu::thread_varMax_to_int_fu_297_p1() {
    varMax_to_int_fu_297_p1 = varMax_fu_48.read();
}

void otsu::thread_wB_1_fu_237_p0() {
    wB_1_fu_237_p0 = histData_q0.read();
}

void otsu::thread_wB_1_fu_237_p2() {
    wB_1_fu_237_p2 = (!wB_1_fu_237_p0.read().is_01() || !wB_reg_95.read().is_01())? sc_lv<32>(): (sc_bigint<32>(wB_1_fu_237_p0.read()) + sc_biguint<32>(wB_reg_95.read()));
}

void otsu::thread_wF_fu_249_p2() {
    wF_fu_249_p2 = (!ap_const_lv32_FAAA.is_01() || !wB_1_fu_237_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_FAAA) - sc_biguint<32>(wB_1_fu_237_p2.read()));
}

void otsu::thread_ap_NS_fsm() {
    if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_177_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state16;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && (esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_1) || 
  (esl_seteq<1,1,1>(tmp_s_fu_255_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_0))))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(tmp_s_fu_255_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_5_reg_436.read(), ap_const_lv1_0))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else {
            ap_NS_fsm = ap_ST_fsm_state65;
        }
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,65,65>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<65>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

